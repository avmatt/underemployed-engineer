---
export interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/placeholder-social.jpg" } = Astro.props;
---

<head>
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta
    name="viewport"
    content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1"
  />
  <link
    rel="icon"
    href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üë®‚Äçüíª</text></svg>"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap"
  />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.url)} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.url)} />

  <script>
    import gsap from "gsap";
    var mouseX = 0,
      mouseY = 0;

    addEventListener("mousemove", function (event) {
      mouseX = event.clientX;
      mouseY = event.clientY;

      gsap.to("#pointer", {
        duration: 1,
        ease: "elastic",
        left: mouseX - 20,
        top: mouseY - 20,
        width: 40,
        height: 40,
        borderRadius: 20,
      });
    });

    addEventListener("scroll", function (event) {
      gsap.to("#pointer", {
        duration: 1,
        ease: "elastic",
        left: mouseX - 20,
        top: mouseY - 20,
        width: 40,
        height: 40,
        borderRadius: 20,
      });
    });

    for (var anchor of document.querySelectorAll("a")) {
      anchor.addEventListener("mousemove", function (event) {
        event.stopPropagation();
        mouseX = event.clientX;
        mouseY = event.clientY;

        var rect = event.currentTarget.getBoundingClientRect();

        gsap.to("#pointer", {
          duration: 0.8,
          ease: "elastic",
          left: rect.left - 8,
          top: rect.top - 8,
          width: rect.width + 16,
          height: rect.height + 16,
          borderRadius: 5,
        });
      });
    }
  </script>
</head>
